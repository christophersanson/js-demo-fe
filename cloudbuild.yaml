steps:
- id: 'Fetch cached node_modules'
  name: gcr.io/cloud-builders/gsutil
  args: ['cp', 'gs://js-demo-fe-cache/node_modules.tar.gz', 'previous_node_modules.tar.gz']
- id: 'Decompress node_modules'
  name: gcr.io/cloud-builders/wget
  entrypoint: 'sh'
  args:
      - '-c'
      - |
        tar -xzf previous_node_modules.tar.gz node_modules
- id: 'Install dependencies'
  name: 'gcr.io/cloud-builders/npm'
  args: [ 'install' ]
- id: 'Lint'
  name: 'gcr.io/cloud-builders/npm'
  args: [ 'run', 'lint' ]
- id: 'Unit test'
  name: 'gcr.io/cloud-builders/npm'
  args: [ 'test' ]
  env:
  - 'CI=true'
- id: 'Build'
  name: 'gcr.io/cloud-builders/npm'
  args: [ 'run', 'build' ]
- id: 'Deploy'
  name: 'gcr.io/$PROJECT_ID/firebase-builder'
  args: [ 'deploy', '-P', '$_FIREBASE_APP', '--token', '1/t_PDRgQ3QSsOR3v0z-HwMGtmZu_Bp8ttGrJCsgFrs8PtnSd0B0d_cXhXNbPabhRH']
- id: 'Compress node_modules'
  name: gcr.io/cloud-builders/wget
  entrypoint: 'sh'
  args:
      - '-c'
      - |
        tar -czf node_modules.tar.gz node_modules
- id: 'Cache node_modules in GCS'
  name: gcr.io/cloud-builders/gsutil
  args: ['cp', 'node_modules.tar.gz', 'gs://js-demo-fe-cache/node_modules.tar.gz']